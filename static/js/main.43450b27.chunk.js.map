{"version":3,"sources":["logo.svg","Components/PlayerEntry.js","Components/Score.js","Components/PunishmentEntry.js","Components/GameEntry.js","Components/DareEntry.js","Components/PickingGame.js","Components/PlayingGame.js","Components/PickingDare.js","Components/DoingDare.js","Components/OverScreen.js","Components/ResetScreen.js","Components/GameDisplay.js","App.js","reportWebVitals.js","index.js"],"names":["PlayerEntry","console","log","this","props","forwardEvent","takenPlayers","setPlayer","playerName","className","type","onClick","event","payload","name","disabled","value","React","Component","Score","players","score","stage","includes","PunishmentEntry","handleChange","setState","target","handleSubmit","punishment","state","preventDefault","stageName","bind","gameState","entryForm","onSubmit","for","id","onChange","length","readyPlayer","GameEntry","challenge","challenges","addedGames","map","DareEntry","dare","dares","addedDares","PickingGame","shuffleGames","challengeSelected","Math","floor","random","submitChoice","turn","PlayingGame","hafsaEvent","gjEvent","currentChallenge","PickingDare","shuffleDares","dareSelected","daree","DoingDare","eventsByName","currentDare","OverScreen","winner","ResetScreen","wipeState","GameDisplay","resetGame","App","ws","WebSocket","send","JSON","stringify","onopen","onmessage","evt","parse","data","onclose","reset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43450b27.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import '../App.css';\nimport React from 'react';\n\nclass PlayerEntry extends React.Component {\n    \n    render(){\n        console.log(this.props);\n        const {forwardEvent, takenPlayers, setPlayer, playerName} = this.props;\n\n        if(playerName){\n            return (\n                <p>Waiting on other player to enter</p>\n            )\n        }\n        return (\n            <div>\n                <p>Welcome to your valentine's day date. Who are you?</p><br/>\n                <div className=\"center-contents\">\n                    <input\n                        type=\"button\"\n                        className={\"f6 grow no-underline br-pill pa5 pv2 ma3 dib white bg-hot-pink b--hot-pink\" + (takenPlayers !== null && takenPlayers[0]==='Hafsa' ? ' o-30': '')}\n                        onClick={() => {\n                                forwardEvent({event: 'player_entered', payload: {name: 'Hafsa'}})();\n                                setPlayer('Hafsa')\n                            }\n                        }\n                        disabled={takenPlayers !== null && takenPlayers[0]==='Hafsa'}\n                        value=\"Hafsa\"\n                        />\n                    <input\n                        type=\"button\"\n                        className={\"f6 grow no-underline br-pill pa5 pv2 ma3 dib white bg-hot-pink b--hot-pink\" + (takenPlayers !== null && takenPlayers[0]==='GJ' ? ' o-30': '')}\n                        onClick={() => {\n                                forwardEvent({event: 'player_entered', payload: {name: 'GJ'}})();\n                                setPlayer('GJ')\n                            }\n                        }\n                        disabled={takenPlayers !== null && takenPlayers[0]==='GJ'}\n                        value=\"GJ\"\n                        />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PlayerEntry;","import '../App.css';\nimport React from 'react';\n\nclass Score extends React.Component{\n    render(){\n        const {players, score, stage} = this.props;\n        if(!['player_entry', 'punishment_entry', 'game_entry', 'dare_entry', 'resetting'].includes(stage)){\n            return (\n                <div className='flex justify-around'>\n                    <div className=\"flex flex-column justify-center items-center\">\n                        <h1 className=\"f1 mb0\">{score[0]}</h1>\n                        <h3 className=\"f4 mt1\">{players[0]}</h3>\n                    </div>\n                    <div className=\"flex flex-column justify-center items-center\">\n                        <h1 className=\"f1 mb0\">{score[1]}</h1>\n                        <h3 className=\"f4 mt1\">{players[1]}</h3>\n                    </div>\n                </div>\n            )\n        }\n        return (<div></div>)\n    }\n}\n\nexport default Score","import '../App.css';\nimport React from 'react';\n\nclass PunishmentEntry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {value: ''};\n        this.stageName = 'punishment_entry'\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange = (event) => {\n        this.setState({value: event.target.value});\n    }\n\n    handleSubmit = (event) => {\n        console.log('punish_entered')\n        this.props.forwardEvent({\n            event: 'punish_entered',\n            payload: {\n                name: this.props.playerName,\n                punishment: this.state.value\n            }\n        })();\n        event.preventDefault();\n    }\n    \n    render(){\n        const {playerName, gameState, forwardEvent} = this.props;\n        if(gameState.stage !== this.stageName){\n            return null;\n        }\n        const entryForm = (\n            <form className='flex flex-column justify-around items-center' onSubmit={this.handleSubmit}>\n                <label className=\"f6 b db mb2\" for=\"punishment\">\n                    Set your opponent's punishment should they lose: \n                    <input className=\"input-reset ba b--black-20 pa2 mb2 db w-100 o-60 bg-pink mt3\" type=\"text\" id=\"punishment\" name=\"punishment\" value={this.state.value} onChange={this.handleChange}/><br/>\n                </label>\n                <div className='center-contents mt3'>\n                    <input type=\"submit\" value=\"Submit\" className=\"f6 grow no-underline br-pill ba bw2 ph3 pv2 mb2 dib hot-pink b--hot-pink\" disabled={!this.state.value.length}/>\n                </div>\n            </form>\n        )\n\n        if(gameState.readyPlayer !== null){\n            console.log('readyPlayer', gameState.readyPlayer, 'playerName', playerName)\n            if(gameState.readyPlayer === playerName){\n                return (\n                    <div className='flex justify-center'>\n                        <p>Waiting on that slowpoke to finish entering your punishment. Probably gonna be spicy though.</p>\n                    </div>\n                )\n            }\n            else{\n                return (\n                    <div>\n                        <p className='flex justify-center'>Quit being a slowpoke. {gameState.readyPlayer} is waiting on you to finish entering.</p>\n                        {entryForm}\n                    </div>\n                )\n            }\n        }\n\n        return entryForm;\n    }\n}\n\nexport default PunishmentEntry;","import '../App.css';\nimport React from 'react';\n\nclass GameEntry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {value: ''};\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    stageName = 'game_entry';\n\n    handleChange = (event) => {\n        this.setState({value: event.target.value});\n    }\n\n    handleSubmit = (event) => {\n        if(this.state.value){\n            this.props.forwardEvent({\n                event: 'game_entered',\n                payload: {\n                    challenge: this.state.value\n                }\n            })();\n        }\n        \n        this.setState({value: ''})\n        event.preventDefault();\n    }\n\n    render(){\n        const {playerName, gameState, forwardEvent} = this.props;\n\n        if(gameState.stage !== this.stageName){\n            return null;\n        }\n\n        const entryForm = (\n            <div className='w-60'>\n                <form onSubmit={this.handleSubmit}>\n                    <div className='flex justify-center'>\n                        <label className=\"f6 b db mb2\" for=\"gameInput\">Enter at least 11 games (in total) you and your date should play:</label><br/>\n                        <input className=\"input-reset ba b--black-20 pa2 mb2 db w-100 o-60 bg-pink\" type=\"text\" id=\"gameInput\" name=\"gameInput\" value={this.state.value} onChange={this.handleChange}/><br/>\n                    </div>\n                    <div className='flex justify-between mt4'>\n                        <input className={\"f6 grow no-underline br-pill pa5 pv2 ma3 dib white bg-hot-pink b--hot-pink\" + (this.state.value.length ? \"\" : ' o-40')} type=\"submit\" value=\"Submit Game\" disabled={!this.state.value.length}/>\n                        <button\n                            className={\"f6 grow no-underline br-pill pa5 pv2 ma3 dib white bg-hot-pink b--hot-pink\" + (gameState.challenges.length < 11 ? ' o-40' : '')}\n                            onClick={forwardEvent({\n                                    event: 'player_ready',\n                                    payload: {\n                                        name: playerName\n                                    }\n                                })\n                            }\n                            disabled={gameState.challenges.length < 11}\n                        >\n                            Done Submitting\n                        </button>\n                    </div>\n                </form>\n            </div>\n            \n        )\n        \n        const addedGames = (\n            <ul className='w-35 list pl0'>\n                <div className='flex flex-column justify-center items-center'>\n                    {gameState.challenges.length ? (<h1>Submitted Challenges ({gameState.challenges.length})</h1>) : null}\n                    {gameState.challenges.map(challenge => <li>{challenge}</li>)}\n                </div>\n            </ul>\n        )\n\n        if(gameState.readyPlayer){\n            if(gameState.readyPlayer === playerName){\n                return (\n                    <div className='flex flex-column items-center justify-around'>\n                        <p>I'm so sorry you gotta wait for this person. On Valentine's day too ?? Chile ...</p>\n                        {addedGames}\n                    </div>\n                )\n            }\n            else{\n                return (\n                    <div className='flex flex-column items-center justify-around'>\n                        <p>Quit being a slowpoke. {gameState.readyPlayer} is waiting on you to finish entering.</p>\n                        <div className='flex justify-around items-center'>\n                            {entryForm}\n                            {addedGames}\n                        </div>\n                        \n                    </div>\n                )\n            }\n        }\n\n        return (\n            <div className='flex justify-around items-center'>\n                {entryForm}\n                {addedGames}\n            </div>\n        )\n    }\n}\n\nexport default GameEntry;","import '../App.css';\nimport React from 'react';\n\nclass DareEntry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {value: ''};\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    stageName = 'dare_entry';\n\n    handleChange = (event) => {\n        this.setState({value: event.target.value});\n    }\n\n    handleSubmit = (event) => {\n        if(this.state.value){\n            this.props.forwardEvent({\n                event: 'dare_entered',\n                payload: {\n                    dare: this.state.value\n                }\n            })();\n        }\n        \n        this.setState({value: ''})\n        event.preventDefault();\n    }\n\n    render(){\n        const {playerName, gameState, forwardEvent} = this.props;\n\n        if(gameState.stage !== this.stageName){\n            return null;\n        }\n\n        const entryForm = (\n            <div className='w-60'>\n                <form onSubmit={this.handleSubmit}>\n                    <div className='flex justify-center'>\n                        <label className=\"f6 b db mb2\" for=\"dareInput\">Input at least 11 dares (in total) you're ready to see your date (and potentially yourself) do: </label><br/>\n                        <input className=\"input-reset ba b--black-20 pa2 mb2 db w-100 o-60 bg-pink\" type=\"text\" id=\"dareInput\" name=\"dareInput\" value={this.state.value} onChange={this.handleChange}/><br/>\n                    </div>\n                    <div className='flex justify-between mt4'>\n                        <input className=\"f6 grow no-underline br-pill pa5 pv2 ma3 dib white bg-hot-pink b--hot-pink\" type=\"submit\" value=\"Submit\" disabled={!this.state.value.length}/>\n                        <button \n                            className=\"f6 grow no-underline br-pill pa5 pv2 ma3 dib white bg-hot-pink b--hot-pink\"\n                            onClick={forwardEvent({\n                                    event: 'player_ready',\n                                    payload: {\n                                        name: playerName\n                                    }\n                                })\n                            }\n                            disabled={gameState.dares.length < 11}\n                        >\n                            Done Submitting\n                        </button>\n                    </div>\n                </form>\n            </div>\n            \n        )\n        \n        const addedDares = (\n            <ul className='w-35 list pl0'>\n                <div className='flex flex-column justify-center items-center'>\n                    {gameState.dares.length ? (<h1>Submitted Dares ({gameState.dares.length})</h1>) : null}\n                    {gameState.dares.map(dare => <li>{dare}</li>)}\n                </div>\n            </ul>\n        )\n\n        if(gameState.readyPlayer){\n            if(gameState.readyPlayer === playerName){\n                return (\n                    <div className='flex flex-column items-center justify-around'>\n                        <p>Damn, can you let them know they can finish anyday now ???</p>\n                        {addedDares}\n                    </div>\n                )\n            }\n            else{\n                return (\n                    <div className='flex flex-column items-center justify-around'>\n                        <p>Like today? {gameState.readyPlayer} BEEN done.</p>\n                        <div className='flex justify-around items-center'>\n                            {entryForm}\n                            {addedDares}\n                        </div>\n                    </div>\n                )\n            }\n        }\n\n        return (\n            <div className='flex justify-around items-center'>\n                {entryForm}\n                {addedDares}\n            </div>\n        )\n    }\n}\n\nexport default DareEntry;","import '../App.css';\nimport React from 'react';\n\nclass PickingGame extends React.Component {\n    stageName = 'picking_game';\n    constructor(props){\n        super(props);\n        this.state = {\n            challengeSelected: null\n        }\n\n        this.shuffleGames = this.shuffleGames.bind(this);\n        this.submitChoice = this.submitChoice.bind(this)\n    }\n    \n    shuffleGames = (event) => {\n        const challenges = this.props.gameState.challenges;\n        this.setState({challengeSelected: challenges[Math.floor(Math.random() * challenges.length)]});\n        event.preventDefault();\n    }\n\n    submitChoice = (event) => {\n        this.props.forwardEvent({\n            event: 'game_picked',\n            payload: {\n                name: this.props.playerName,\n                challenge: this.state.challengeSelected\n            }\n        })();\n        this.setState({challengeSelected: null})\n        event.preventDefault();\n    }\n    \n    render(){\n        const {playerName, gameState, forwardEvent} = this.props;\n\n        if(gameState.stage !== this.stageName){\n            return null;\n        }\n        \n        if(gameState.turn === playerName){\n            if(!this.state.challengeSelected){\n                return(\n                    <form className='flex flex-column justify-center items-center' onSubmit={this.shuffleGames}>\n                        <label>Spin for game you and your date will play by clicking but (or pressing Enter)</label>\n                        <input className='mt2 f6 grow no-underline br-pill pa5 pv2 ma3 dib white bg-hot-pink b--hot-pink' type=\"submit\" value=\"Spin For Game\" />\n                    </form>\n                )  \n            }\n            else{\n                return(\n                    <form className='flex flex-column justify-center items-center' onSubmit={this.submitChoice}>\n                        <p>You selected: {this.state.challengeSelected}</p>\n                        <input className=\"f6 grow no-underline br-pill pa5 pv2 ma3 dib white bg-hot-pink b--hot-pink\" type=\"submit\" value=\"Continue\" />\n                    </form>\n                )\n            }\n        }\n        else{\n            return (\n                <div className='flex justify-center'>\n                    <p>{gameState.turn} is choosing the challenge.</p>\n                </div>\n            )\n        }\n    }\n}\n\nexport default PickingGame;","import '../App.css';\nimport React from 'react';\n\nclass PlayingGame extends React.Component {\n    stageName = 'playing_game';\n    hafsaEvent = {\n        event: 'game_played',\n        payload: {\n            name: 'Hafsa'\n        }\n    }\n    gjEvent = {\n        event: 'game_played',\n        payload: {\n            name: 'GJ'\n        }\n    }\n\n    render(){\n        const {playerName, gameState, forwardEvent} = this.props;\n        \n        if(gameState.stage !== this.stageName){\n            return null;\n        }\n        \n        return (\n            <div className='flex flex-column justify-center items-center'>\n                <p>You will now play {gameState.currentChallenge}</p>\n                <div className='flex flex-column justify-center items-center'>\n                    <p>Who won?</p>\n                    <div className='flex justify-between'>\n                        <button className='pv3 ph4 ma3 f6 grow no-underline br-pill pa5 pv2 ma3 dib white bg-hot-pink b--hot-pink' onClick={forwardEvent(this.hafsaEvent)}>Hafsa</button>\n                        <button className='pv3 ph4 ma3 f6 grow no-underline br-pill pa5 pv2 ma3 dib white bg-hot-pink b--hot-pink' onClick={forwardEvent(this.gjEvent)}>GJ</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PlayingGame;","import '../App.css';\nimport React from 'react';\n\nclass PickingDare extends React.Component {\n    stageName = 'picking_dare';\n    constructor(props){\n        super(props);\n        this.state = {\n            dareSelected: null\n        }\n\n        this.shuffleDares = this.shuffleDares.bind(this);\n        this.submitChoice = this.submitChoice.bind(this)\n    }\n    \n    shuffleDares = (event) => {\n        const dares = this.props.gameState.dares;\n        this.setState({dareSelected: dares[Math.floor(Math.random() * dares.length)]});\n        event.preventDefault();\n    }\n\n    submitChoice = (event) => {\n        this.props.forwardEvent({\n            event: 'dare_picked',\n            payload: {\n                name: this.props.playerName,\n                dare: this.state.dareSelected\n            }\n        })();\n        this.setState({dareSelected: null});\n        event.preventDefault();\n    }\n    \n    render(){\n        const {playerName, gameState, forwardEvent} = this.props;\n\n        if(gameState.stage !== this.stageName){\n            return null;\n        }\n\n        if(gameState.daree === playerName){\n            if(!this.state.dareSelected){\n                return(\n                    <form className='flex flex-column justify-center items-center' onSubmit={this.shuffleDares}>\n                        <label>Spin for dare you will perform for your date's pleasure by clicking but (or pressing Enter)</label>\n                        <input className=\"f6 grow no-underline br-pill pa5 pv2 ma3 dib white bg-hot-pink b--hot-pink mt2\" type=\"submit\" value=\"Spin For Dare\" />\n                    </form>\n                )  \n            }\n            else{\n                return(\n                    <form className='flex flex-column justify-center items-center' onSubmit={this.submitChoice}>\n                        <p>You selected: {this.state.dareSelected}</p>\n                        <input className=\"f6 grow no-underline br-pill pa5 pv2 ma3 dib white bg-hot-pink b--hot-pink mt2\" type=\"submit\" value=\"Continue\" />\n                    </form>\n                )\n            }\n        }\n        else{\n            return (\n                <div className='flex flex-column justify-center items-center'>\n                    <p>{gameState.daree} is choosing the dare to perform for your enjoyment.</p>\n                </div>\n            )\n        }\n    }\n}\n\nexport default PickingDare;","import '../App.css';\nimport React from 'react';\n\nclass DoingDare extends React.Component {\n    stageName = 'doing_dare';\n    hafsaEvent = {\n        event: 'dare_performed',\n        payload: {\n            name: 'Hafsa'\n        }\n    }\n    gjEvent = {\n        event: 'dare_performed',\n        payload: {\n            name: 'GJ'\n        }\n    }\n\n    eventsByName = {\n        'Hafsa': this.hafsaEvent,\n        'GJ': this.gjEvent\n    }\n\n    render(){\n        const {playerName, gameState, forwardEvent} = this.props;\n        \n        if(gameState.stage !== this.stageName) return null;\n\n        if(gameState.daree === playerName) return (\n            <div className='flex flex-column justify-center items-center'>\n                <p>Since you lost the last challenge, please {gameState.currentDare} for your date :)</p>\n                <p>They'll move the game along when they feel you've done it properly.</p>\n            </div>\n        )\n        else return (\n            <div className='flex flex-column justify-center items-center'>\n                <p>{gameState.daree} will now {gameState.currentDare} as a dare for you.</p>\n                <p>Please enjoy and click \"Continue\" when satisfied</p>\n                <button className=\"f6 grow no-underline br-pill pa5 pv2 ma3 dib white bg-hot-pink b--hot-pink\" onClick={forwardEvent(this.eventsByName[gameState.daree])}>Continue</button>\n            </div>\n        )\n    }\n}\n\nexport default DoingDare;","import '../App.css';\nimport React from 'react';\n\nclass OverScreen extends React.Component {\n    stageName = 'over';\n    render(){\n        const {playerName, gameState, forwardEvent} = this.props;\n        \n        if(gameState.stage !== this.stageName) return null;\n        \n        if(gameState.winner == playerName) return (\n            <div className='flex flex-column justify-center items-center'>\n                <p>Congrats on winning {playerName}. Always knew you were capable of dusting them. Didn't doubt you for a second.</p>\n                <p>Now your date must undergo the punishment you set at the beginning of the game:</p>\n                <p className='f1'>{gameState.currentDare}</p>\n                <button className=\"f6 grow no-underline br-pill pa5 pv2 ma3 dib white bg-hot-pink b--hot-pink\" onClick={forwardEvent({event: 'reset'})}>End Game</button>\n            </div>\n        )\n        return (\n            <div className='flex flex-column justify-center items-center'>\n                <p>Hahaha! You lost. Better luck next time. In the meantime, here's the punishment {gameState.winner} set for you.</p>\n                <p className='f1'>{gameState.currentDare}</p>\n            </div>\n        )\n    }\n}\n\nexport default OverScreen;","import '../App.css';\nimport React from 'react';\n\nclass ResetScreen extends React.Component {\n    render(){\n        if(!this.props.gameState || this.props.gameState.stage !== 'resetting') return null;\n        \n        this.props.wipeState()\n        return (\n            <div className='flex justify-center items-center'>\n                <p className='h1'>Other player disconnected. Restarting the game shortly</p>\n            </div>\n        )\n\n    }\n}\n\nexport default ResetScreen;","import '../App.css';\nimport React from 'react';\n\nimport Score from './Score';\nimport PlayerEntry from './PlayerEntry';\nimport PunishmentEntry from './PunishmentEntry';\nimport GameEntry from './GameEntry';\nimport DareEntry from './DareEntry';\nimport PickingGame from './PickingGame';\nimport PlayingGame from './PlayingGame';\nimport PickingDare from './PickingDare';\nimport DoingDare from './DoingDare'\nimport OverScreen from './OverScreen';\nimport ResetScreen from './ResetScreen';\n\nclass GameDisplay extends React.Component {\n    render(){\n        const {gameState, playerName, forwardEvent, wipeState, resetGame} = this.props;\n        return (\n            <div className=\"h-100 w-100 ph2 flex flex-column justify-around\">\n                <Score players={gameState.players} score={gameState.score} stage={gameState.stage} />\n                \n                <PunishmentEntry playerName={this.props.playerName} gameState={this.props.gameState} forwardEvent={this.props.forwardEvent}/>\n                <GameEntry playerName={this.props.playerName} gameState={this.props.gameState} forwardEvent={this.props.forwardEvent}/>\n                <DareEntry playerName={this.props.playerName} gameState={this.props.gameState} forwardEvent={this.props.forwardEvent}/>\n                <PickingGame playerName={this.props.playerName} gameState={this.props.gameState} forwardEvent={this.props.forwardEvent}/>\n                <PlayingGame playerName={this.props.playerName} gameState={this.props.gameState} forwardEvent={this.props.forwardEvent}/>\n                <PickingDare playerName={this.props.playerName} gameState={this.props.gameState} forwardEvent={this.props.forwardEvent}/>\n                <DoingDare playerName={this.props.playerName} gameState={this.props.gameState} forwardEvent={this.props.forwardEvent}/>\n                <OverScreen playerName={this.props.playerName} gameState={this.props.gameState} forwardEvent={this.props.forwardEvent}/>\n                <ResetScreen wipeState={wipeState} gameState={gameState}/>\n                <div className='flex justify-center pt5'>\n                    <button onClick={resetGame}>Reset Game</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default GameDisplay;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\n\nimport PlayerEntry from './Components/PlayerEntry';\nimport GameDisplay from './Components/GameDisplay';\n\nclass App extends React.Component {\n  // ws = new WebSocket('ws://localhost:8080/')\n  // ws = new WebSocket('ws://git.heroku.com/virtual-date-api.git')\n  ws = new WebSocket('ws://virtual-date-api.herokuapp.com/')\n  \n  constructor(){\n    super();\n    this.state = {\n      playerName: null,\n      gameState: null\n    }\n  }\n\n  componentDidMount() {\n      this.ws.onopen = () => {\n        // on connecting, do nothing but log it to the console\n        console.log('connected')\n      }\n\n      this.ws.onmessage = evt => {\n        // listen to data sent from the websocket server\n        this.setState({gameState: JSON.parse(evt.data)})\n        console.log(evt.data);\n      }\n\n      this.ws.onclose = () => {\n        console.log('disconnected')\n        // automatically try to reconnect on connection loss\n\n      }\n\n  }\n\n  forwardEvent = (event) => () => {\n    this.ws.send(JSON.stringify(event))\n  }\n\n  setPlayer = (name) => {\n    this.setState({playerName: name})\n  }\n\n  resetGame = () => {\n    this.forwardEvent({event: 'reset'})();\n    this.wipeState()\n  }\n\n  wipeState = () => {\n    this.setState({\n      playerName: null,\n      gameState: null\n    })\n  }\n  \n  render(){\n    const {playerName, gameState, resetGame} = this.state;\n    console.log(gameState);\n\n    if(!gameState){\n      return (\n        <div>\n          <p>Loading Game</p>\n        </div>\n      )\n    }\n    if(gameState.stage === 'player_entry'){\n      return (\n        <div className=\"canvas-div\">\n          <PlayerEntry\n            forwardEvent={this.forwardEvent}\n            takenPlayers={gameState && gameState.players}\n            setPlayer={this.setPlayer}\n            playerName={playerName}\n            />\n        </div>\n      )\n    }\n    \n    return (\n      <div className=\"canvas-div\">\n        <GameDisplay gameState={gameState} reset={resetGame} playerName={playerName} forwardEvent={this.forwardEvent} wipeState={this.wipeState}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}